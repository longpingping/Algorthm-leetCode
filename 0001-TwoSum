
class Solution {

   //Approach #1 Brute force
   public int[] twoSum(int[] nums, int target) {
     int [] res = new int [] {-1,-1};
        for(int i = 0; i < nums.length; i++) {
            for(int j = i + 1; j < nums.length; j++) {
                if(nums[i] + nums[j] == target) {
                    res[0] = i;
                    res[1] = j;
                    break;
                }
            }
        }
        return res;
   }
   
   //Approach #2 Hash
    public int[] twoSum(int[] nums, int target) {
        int [] res = new int [] {-1,-1};
        Map<Integer,Integer> map = new HashMap<>();
        for(int i = 0; i < nums.length; i++) {
            if(map.get(target - nums[i]) != null) {
                res[0] = map.get(target - nums[i]).intValue();
                res[1] = i;
            }
            map.put(nums[i],i);
        }
        return res;
        
    }

}
